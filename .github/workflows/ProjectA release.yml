name: ProjectA release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: false

defaults:
  run:
    working-directory: ./

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: 7.0.x
    - name: Check if package exists
      shell: pwsh
      run: |
        try {
          $response = Invoke-RestMethod -Uri 'https://api.nuget.org/v3-flatcontainer/ezdomain.eventsourcing123/index.json' -Method Get -ErrorAction Stop
        }
        catch {
          $response = $null
        }
        if ($null -eq $response) {
          if ("${{ github.event.inputs.version }}" -eq "") {
            echo "Package does not exist on NuGet and no version input provided"
            exit 1
          }
          echo "NEW_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        }
        echo "Package exists on NuGet"
    - name: Get latest version
      id: latest_version
      shell: pwsh
      run: |
        $LATEST_VERSION = (Invoke-RestMethod -Uri 'https://api.nuget.org/v3-flatcontainer/ezdomain.eventsourcing/index.json').versions[-1]
        echo "LATEST_VERSION=$LATEST_VERSION"
        echo $LATEST_VERSION >> $GITHUB_OUTPUT
    - name: Restore project dependencies
      run: dotnet restore 'src/ProjectA/ProjectA.csproj'
    - name: Build project
      run: dotnet build 'src/ProjectA/ProjectA.csproj' --configuration Release  --no-restore
    - name: Pack project
      run: |
        dotnet pack 'src/ProjectA/ProjectA.csproj' --configuration Release --output .nuget/ -p:PackageVersion=${{ steps.step_id.outputs.LATEST_VERSION }}